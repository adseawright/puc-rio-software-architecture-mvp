{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seawright\\\\Documents\\\\PUC\\\\jrpreneur\\\\src\\\\components\\\\Stores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../styles/Stores.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stores = () => {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const [editingStore, setEditingStore] = useState(null); // State to track the store being edited\n  const navigate = useNavigate();\n\n  // Fetch stores when the component mounts\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const userId = localStorage.getItem('user_id');\n        const response = await axios.get(`/api/stores?owner_id=${userId}`);\n        setStores(response.data);\n      } catch (error) {\n        setMessage('Failed to fetch stores');\n      }\n    };\n    fetchStores();\n  }, []);\n\n  // Handle the addition or update of a store\n  const handleAddOrUpdateStore = async e => {\n    e.preventDefault();\n    try {\n      const userId = localStorage.getItem('user_id');\n      if (editingStore) {\n        // Update existing store\n        await axios.put(`/api/stores/${editingStore.id}`, {\n          name,\n          description\n        });\n        setMessage('Store updated successfully');\n      } else {\n        // Add new store\n        const response = await axios.post('/api/stores', {\n          name,\n          description,\n          owner_id: userId\n        });\n        setMessage(response.data.message);\n        setStores([...stores, response.data.store]); // Add the new store to the list\n        localStorage.setItem('store_id', response.data.store.id); // Update store_id in localStorage\n      }\n      setName('');\n      setDescription('');\n      setEditingStore(null); // Reset editing state\n      fetchStores(); // Refresh the stores list\n    } catch (error) {\n      setMessage('Failed to add/update store: ' + (error.response.data.message || error.message));\n    }\n  };\n\n  // Handle editing of a store\n  const handleEditStore = store => {\n    setName(store.name);\n    setDescription(store.description);\n    setEditingStore(store);\n  };\n\n  // Handle deletion of a store\n  const handleDeleteStore = async storeId => {\n    try {\n      await axios.delete(`/api/stores/${storeId}`);\n      setMessage('Store deleted successfully');\n      fetchStores(); // Refresh the stores list\n    } catch (error) {\n      setMessage('Failed to delete store: ' + (error.response.data.message || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stores-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddOrUpdateStore,\n      className: \"store-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"store-button\",\n        children: editingStore ? 'Update Store' : 'Add Store'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Store List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"store-list\",\n      children: stores.map(store => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"store-item\",\n        children: [store.name, \" - \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/storefront/${store.id}`,\n          children: \"View Storefront\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditStore(store),\n          className: \"edit-button\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteStore(store.id),\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, store.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Stores, \"z1fSDxOvNcC0+97nhJPPujtfoPc=\", false, function () {\n  return [useNavigate];\n});\n_c = Stores;\nexport default Stores;\nvar _c;\n$RefreshReg$(_c, \"Stores\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Link","jsxDEV","_jsxDEV","Stores","_s","stores","setStores","name","setName","description","setDescription","message","setMessage","editingStore","setEditingStore","navigate","fetchStores","userId","localStorage","getItem","response","get","data","error","handleAddOrUpdateStore","e","preventDefault","put","id","post","owner_id","store","setItem","handleEditStore","handleDeleteStore","storeId","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","map","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Seawright/Documents/PUC/jrpreneur/src/components/Stores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../axios';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../styles/Stores.css';\r\n\r\nconst Stores = () => {\r\n    const [stores, setStores] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [editingStore, setEditingStore] = useState(null); // State to track the store being edited\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch stores when the component mounts\r\n    useEffect(() => {\r\n        const fetchStores = async () => {\r\n            try {\r\n                const userId = localStorage.getItem('user_id');\r\n                const response = await axios.get(`/api/stores?owner_id=${userId}`);\r\n                setStores(response.data);\r\n            } catch (error) {\r\n                setMessage('Failed to fetch stores');\r\n            }\r\n        };\r\n\r\n        fetchStores();\r\n    }, []);\r\n\r\n    // Handle the addition or update of a store\r\n    const handleAddOrUpdateStore = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const userId = localStorage.getItem('user_id');\r\n            if (editingStore) {\r\n                // Update existing store\r\n                await axios.put(`/api/stores/${editingStore.id}`, { name, description });\r\n                setMessage('Store updated successfully');\r\n            } else {\r\n                // Add new store\r\n                const response = await axios.post('/api/stores', { name, description, owner_id: userId });\r\n                setMessage(response.data.message);\r\n                setStores([...stores, response.data.store]); // Add the new store to the list\r\n                localStorage.setItem('store_id', response.data.store.id); // Update store_id in localStorage\r\n            }\r\n\r\n            setName('');\r\n            setDescription('');\r\n            setEditingStore(null); // Reset editing state\r\n            fetchStores(); // Refresh the stores list\r\n        } catch (error) {\r\n            setMessage('Failed to add/update store: ' + (error.response.data.message || error.message));\r\n        }\r\n    };\r\n\r\n    // Handle editing of a store\r\n    const handleEditStore = (store) => {\r\n        setName(store.name);\r\n        setDescription(store.description);\r\n        setEditingStore(store);\r\n    };\r\n\r\n    // Handle deletion of a store\r\n    const handleDeleteStore = async (storeId) => {\r\n        try {\r\n            await axios.delete(`/api/stores/${storeId}`);\r\n            setMessage('Store deleted successfully');\r\n            fetchStores(); // Refresh the stores list\r\n        } catch (error) {\r\n            setMessage('Failed to delete store: ' + (error.response.data.message || error.message));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"stores-container\">\r\n            <h2>Stores</h2>\r\n            {/* Form to add or update a store */}\r\n            <form onSubmit={handleAddOrUpdateStore} className=\"store-form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"store-button\">\r\n                    {editingStore ? 'Update Store' : 'Add Store'}\r\n                </button>\r\n            </form>\r\n            <p>{message}</p>\r\n            <h3>Store List</h3>\r\n            {/* List of stores */}\r\n            <ul className=\"store-list\">\r\n                {stores.map((store) => (\r\n                    <li key={store.id} className=\"store-item\">\r\n                        {store.name} - <Link to={`/storefront/${store.id}`}>View Storefront</Link>\r\n                        <button onClick={() => handleEditStore(store)} className=\"edit-button\">Edit</button>\r\n                        <button onClick={() => handleDeleteStore(store.id)} className=\"delete-button\">Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Stores;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}